if(application.equals("ar")){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}
//apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_version
    buildToolsVersion build_version
    sourceSets{
        main{
            assets.srcDirs += 'src/main/assets_solar'
            res.srcDirs += 'src/main/res_solar'
            if (application.equals("ar")) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }  else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
    defaultConfig {
        minSdkVersion min_version
        targetSdkVersion target_version
        versionCode 1
        versionName "1.0"


        multiDexEnabled true
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'androidx.core:core-ktx:1.3.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.alibaba:arouter-api:1.5.0'
    kapt 'com.alibaba:arouter-compiler:1.2.2'


    implementation "com.google.ar.sceneform:core:1.17.0"
    implementation 'com.google.android.material:material:1.1.0'
    api project(':base')
}

apply plugin: 'com.google.ar.sceneform.plugin'
sceneform.asset('sampledata/models/Earth/Earth.gltf',
        'default',
        'sampledata/models/Earth/Earth.sfa',
        'src/main/assets_solar/Earth')

sceneform.asset('sampledata/models/Jupiter/Jupiter.gltf',
        'default',
        'sampledata/models/Jupiter/Jupiter.sfa',
        'src/main/assets_solar/Jupiter')

sceneform.asset('sampledata/models/Luna/Luna.gltf',
        'default',
        'sampledata/models/Luna/Luna.sfa',
        'src/main/assets_solar/Luna')

sceneform.asset('sampledata/models/Mars/Mars.gltf',
        'default',
        'sampledata/models/Mars/Mars.sfa',
        'src/main/assets_solar/Mars')

sceneform.asset('sampledata/models/Mercury/Mercury.gltf',
        'default',
        'sampledata/models/Mercury/Mercury.sfa',
        'src/main/assets_solar/Mercury')

sceneform.asset('sampledata/models/Neptune/Neptune.gltf',
        'default',
        'sampledata/models/Neptune/Neptune.sfa',
        'src/main/assets_solar/Neptune')

sceneform.asset('sampledata/models/Saturn/Saturn.gltf',
        'default',
        'sampledata/models/Saturn/Saturn.sfa',
        'src/main/assets_solar/Saturn')

sceneform.asset('sampledata/models/Sol/Sol.gltf',
        'default',
        'sampledata/models/Sol/Sol.sfa',
        'src/main/assets_solar/Sol')


sceneform.asset('sampledata/models/Uranus/Uranus.gltf',
        'default',
        'sampledata/models/Uranus/Uranus.sfa',
        'src/main/assets_solar_solar/Uranus')

sceneform.asset('sampledata/models/Venus/Venus.gltf',
        'default',
        'sampledata/models/Venus/Venus.sfa',
        'src/main/assets_solar/Venus')
